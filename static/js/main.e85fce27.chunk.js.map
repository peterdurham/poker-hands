{"version":3,"sources":["assets/images/card-back.png","assets/images/2C.png","assets/images/3C.png","assets/images/4C.png","assets/images/5C.png","assets/images/6C.png","assets/images/7C.png","assets/images/8C.png","assets/images/9C.png","assets/images/10C.png","assets/images/JC.png","assets/images/QC.png","assets/images/KC.png","assets/images/AC.png","assets/images/2D.png","assets/images/3D.png","assets/images/4D.png","assets/images/5D.png","assets/images/6D.png","assets/images/7D.png","assets/images/8D.png","assets/images/9D.png","assets/images/10D.png","assets/images/JD.png","assets/images/QD.png","assets/images/KD.png","assets/images/AD.png","assets/images/2H.png","assets/images/3H.png","assets/images/4H.png","assets/images/5H.png","assets/images/6H.png","assets/images/7H.png","assets/images/8H.png","assets/images/9H.png","assets/images/10H.png","assets/images/JH.png","assets/images/QH.png","assets/images/KH.png","assets/images/AH.png","assets/images/2S.png","assets/images/3S.png","assets/images/4S.png","assets/images/5S.png","assets/images/6S.png","assets/images/7S.png","assets/images/8S.png","assets/images/9S.png","assets/images/10S.png","assets/images/JS.png","assets/images/QS.png","assets/images/KS.png","assets/images/AS.png","Controls/Controls.js","Card/Card.js","Board/Board.js","Hand/Hand.js","Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Controls","_ref","handStatus","boardStatus","dealHand","dealBoard","shuffle","flopStatus","name","turnStatus","riverStatus","react_default","a","createElement","className","onClick","disabled","Card","cardImage","src","CardBack","alt","TwoClubs","ThreeClubs","FourClubs","FiveClubs","SixClubs","SevenClubs","EightClubs","NineClubs","TenClubs","JackClubs","QueenClubs","KingClubs","AceClubs","TwoDiamonds","ThreeDiamonds","FourDiamonds","FiveDiamonds","SixDiamonds","SevenDiamonds","EightDiamonds","NineDiamonds","TenDiamonds","JackDiamonds","QueenDiamonds","KingDiamonds","AceDiamonds","TwoHearts","ThreeHearts","FourHearts","FiveHearts","SixHearts","SevenHearts","EightHearts","NineHearts","TenHearts","JackHearts","QueenHearts","KingHearts","AceHearts","TwoSpades","ThreeSpades","FourSpades","FiveSpades","SixSpades","SevenSpades","EightSpades","NineSpades","TenSpades","JackSpades","QueenSpades","KingSpades","AceSpades","Board","board","map","item","index","key","src_Card_Card","Hand","handCards","Results","bestHand","blankCard","value","suit","numericalValue","App","state","deck","hand","shuffleDeckHandler","this","suits","values","numericalValues","i","length","j","cardInstance","push","resetHand","resetBoard","_this","setState","drawHandHandler","deckCopy","Object","assign","card1Index","Math","floor","random","card1","splice","card2Index","card2","determineBestHand","drawBoardHandler","currentBoard","boardCopy","board1Index","board1","board2Index","board2","board3Index","board3","unshift","board4Index","board4","board5Index","board5","allCards","concat","cardValues","forEach","card","cardSuits","possibleStraights","straight","allValues","allSuits","broadway","_loop","filter","flushCards","flushValues","every","indexOf","v","_ret","_loop2","_ret9","maxValue","max","apply","toConsumableArray","cardName","convertValueToName","_ret2","_loop3","cardCount","convertValueToPluralName","_ret3","_loop4","firstCount","higherPair","remainingValues","_loop9","secondCount","lowerPair","_ret10","_ret4","_loop5","flushMax","_ret5","_loop6","_ret6","_loop7","_loop10","_ret11","_ret7","_loop8","_ret8","src_Board_Board","src_Hand_Hand","src_Results_Results","src_Controls_Controls","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC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","file":"static/js/main.e85fce27.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-back.6ca01611.png\";","module.exports = __webpack_public_path__ + \"static/media/2C.136dab43.png\";","module.exports = __webpack_public_path__ + \"static/media/3C.6ed5bf64.png\";","module.exports = __webpack_public_path__ + \"static/media/4C.23c51e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/5C.3ac88edd.png\";","module.exports = __webpack_public_path__ + \"static/media/6C.5c96f40f.png\";","module.exports = __webpack_public_path__ + \"static/media/7C.4808cc41.png\";","module.exports = __webpack_public_path__ + \"static/media/8C.a46a54d9.png\";","module.exports = __webpack_public_path__ + \"static/media/9C.4f8d0d8f.png\";","module.exports = __webpack_public_path__ + \"static/media/10C.19635027.png\";","module.exports = __webpack_public_path__ + \"static/media/JC.1595a3ea.png\";","module.exports = __webpack_public_path__ + \"static/media/QC.d6296277.png\";","module.exports = __webpack_public_path__ + \"static/media/KC.aa73cfd0.png\";","module.exports = __webpack_public_path__ + \"static/media/AC.17ca9f77.png\";","module.exports = __webpack_public_path__ + \"static/media/2D.1451de5d.png\";","module.exports = __webpack_public_path__ + \"static/media/3D.690d5a47.png\";","module.exports = __webpack_public_path__ + \"static/media/4D.89eaac32.png\";","module.exports = __webpack_public_path__ + \"static/media/5D.24fd440c.png\";","module.exports = __webpack_public_path__ + \"static/media/6D.ff1c6299.png\";","module.exports = __webpack_public_path__ + \"static/media/7D.58d872f0.png\";","module.exports = __webpack_public_path__ + \"static/media/8D.fcafeaf2.png\";","module.exports = __webpack_public_path__ + \"static/media/9D.1d495bb1.png\";","module.exports = __webpack_public_path__ + \"static/media/10D.39ef422e.png\";","module.exports = __webpack_public_path__ + \"static/media/JD.d5682eb4.png\";","module.exports = __webpack_public_path__ + \"static/media/QD.6940967d.png\";","module.exports = __webpack_public_path__ + \"static/media/KD.6b5b30c0.png\";","module.exports = __webpack_public_path__ + \"static/media/AD.f37d608f.png\";","module.exports = __webpack_public_path__ + \"static/media/2H.ebe43495.png\";","module.exports = __webpack_public_path__ + \"static/media/3H.7278d51d.png\";","module.exports = __webpack_public_path__ + \"static/media/4H.6695f1d5.png\";","module.exports = __webpack_public_path__ + \"static/media/5H.5457f189.png\";","module.exports = __webpack_public_path__ + \"static/media/6H.84564e31.png\";","module.exports = __webpack_public_path__ + \"static/media/7H.c8475b53.png\";","module.exports = __webpack_public_path__ + \"static/media/8H.1e9e59b0.png\";","module.exports = __webpack_public_path__ + \"static/media/9H.33ab7891.png\";","module.exports = __webpack_public_path__ + \"static/media/10H.60ab387c.png\";","module.exports = __webpack_public_path__ + \"static/media/JH.fdf4ffc4.png\";","module.exports = __webpack_public_path__ + \"static/media/QH.63afa62b.png\";","module.exports = __webpack_public_path__ + \"static/media/KH.3b48ae82.png\";","module.exports = __webpack_public_path__ + \"static/media/AH.a762540d.png\";","module.exports = __webpack_public_path__ + \"static/media/2S.33c964ae.png\";","module.exports = __webpack_public_path__ + \"static/media/3S.9638bf9f.png\";","module.exports = __webpack_public_path__ + \"static/media/4S.5156259e.png\";","module.exports = __webpack_public_path__ + \"static/media/5S.5ab3d862.png\";","module.exports = __webpack_public_path__ + \"static/media/6S.c99b0f04.png\";","module.exports = __webpack_public_path__ + \"static/media/7S.82d62864.png\";","module.exports = __webpack_public_path__ + \"static/media/8S.497eed1e.png\";","module.exports = __webpack_public_path__ + \"static/media/9S.50caac18.png\";","module.exports = __webpack_public_path__ + \"static/media/10S.b208cd7f.png\";","module.exports = __webpack_public_path__ + \"static/media/JS.89d2c97e.png\";","module.exports = __webpack_public_path__ + \"static/media/QS.9026849b.png\";","module.exports = __webpack_public_path__ + \"static/media/KS.e8d1a4cf.png\";","module.exports = __webpack_public_path__ + \"static/media/AS.e6a6d2f8.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Controls = ({\r\n  handStatus,\r\n  boardStatus,\r\n  dealHand,\r\n  dealBoard,\r\n  shuffle\r\n}) => {\r\n  const flopStatus = boardStatus[0].name;\r\n  const turnStatus = boardStatus[3].name;\r\n  const riverStatus = boardStatus[4].name;\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <button className=\"controls-button\" onClick={shuffle}>\r\n        Reset Hand\r\n      </button>\r\n\r\n      {handStatus === \"blank\" && (\r\n        <button className=\"controls-button\" onClick={dealHand}>\r\n          Deal Hand\r\n        </button>\r\n      )}\r\n\r\n      {flopStatus === \"blank\" && handStatus !== \"blank\" && (\r\n        <button className=\"controls-button\" onClick={dealBoard}>\r\n          Deal Flop\r\n        </button>\r\n      )}\r\n\r\n      {turnStatus === \"blank\" && flopStatus !== \"blank\" && (\r\n        <button className=\"controls-button\" onClick={dealBoard}>\r\n          Deal Turn\r\n        </button>\r\n      )}\r\n\r\n      {riverStatus === \"blank\" && turnStatus !== \"blank\" && (\r\n        <button className=\"controls-button\" onClick={dealBoard}>\r\n          Deal River\r\n        </button>\r\n      )}\r\n\r\n      {riverStatus !== \"blank\" && (\r\n        <button disabled className=\"hand-complete controls-button\">\r\n          Hand Complete\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nControls.propTypes = {\r\n  handStatus: PropTypes.string.isRequired,\r\n  dealHand: PropTypes.func.isRequired,\r\n  dealBoard: PropTypes.func.isRequired,\r\n  boardStatus: PropTypes.array.isRequired,\r\n  shuffle: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CardBack from \"../assets/images/card-back.png\";\r\nimport TwoClubs from \"../assets/images/2C.png\";\r\nimport ThreeClubs from \"../assets/images/3C.png\";\r\nimport FourClubs from \"../assets/images/4C.png\";\r\nimport FiveClubs from \"../assets/images/5C.png\";\r\nimport SixClubs from \"../assets/images/6C.png\";\r\nimport SevenClubs from \"../assets/images/7C.png\";\r\nimport EightClubs from \"../assets/images/8C.png\";\r\nimport NineClubs from \"../assets/images/9C.png\";\r\nimport TenClubs from \"../assets/images/10C.png\";\r\nimport JackClubs from \"../assets/images/JC.png\";\r\nimport QueenClubs from \"../assets/images/QC.png\";\r\nimport KingClubs from \"../assets/images/KC.png\";\r\nimport AceClubs from \"../assets/images/AC.png\";\r\nimport TwoDiamonds from \"../assets/images/2D.png\";\r\nimport ThreeDiamonds from \"../assets/images/3D.png\";\r\nimport FourDiamonds from \"../assets/images/4D.png\";\r\nimport FiveDiamonds from \"../assets/images/5D.png\";\r\nimport SixDiamonds from \"../assets/images/6D.png\";\r\nimport SevenDiamonds from \"../assets/images/7D.png\";\r\nimport EightDiamonds from \"../assets/images/8D.png\";\r\nimport NineDiamonds from \"../assets/images/9D.png\";\r\nimport TenDiamonds from \"../assets/images/10D.png\";\r\nimport JackDiamonds from \"../assets/images/JD.png\";\r\nimport QueenDiamonds from \"../assets/images/QD.png\";\r\nimport KingDiamonds from \"../assets/images/KD.png\";\r\nimport AceDiamonds from \"../assets/images/AD.png\";\r\nimport TwoHearts from \"../assets/images/2H.png\";\r\nimport ThreeHearts from \"../assets/images/3H.png\";\r\nimport FourHearts from \"../assets/images/4H.png\";\r\nimport FiveHearts from \"../assets/images/5H.png\";\r\nimport SixHearts from \"../assets/images/6H.png\";\r\nimport SevenHearts from \"../assets/images/7H.png\";\r\nimport EightHearts from \"../assets/images/8H.png\";\r\nimport NineHearts from \"../assets/images/9H.png\";\r\nimport TenHearts from \"../assets/images/10H.png\";\r\nimport JackHearts from \"../assets/images/JH.png\";\r\nimport QueenHearts from \"../assets/images/QH.png\";\r\nimport KingHearts from \"../assets/images/KH.png\";\r\nimport AceHearts from \"../assets/images/AH.png\";\r\nimport TwoSpades from \"../assets/images/2S.png\";\r\nimport ThreeSpades from \"../assets/images/3S.png\";\r\nimport FourSpades from \"../assets/images/4S.png\";\r\nimport FiveSpades from \"../assets/images/5S.png\";\r\nimport SixSpades from \"../assets/images/6S.png\";\r\nimport SevenSpades from \"../assets/images/7S.png\";\r\nimport EightSpades from \"../assets/images/8S.png\";\r\nimport NineSpades from \"../assets/images/9S.png\";\r\nimport TenSpades from \"../assets/images/10S.png\";\r\nimport JackSpades from \"../assets/images/JS.png\";\r\nimport QueenSpades from \"../assets/images/QS.png\";\r\nimport KingSpades from \"../assets/images/KS.png\";\r\nimport AceSpades from \"../assets/images/AS.png\";\r\n\r\nconst Card = ({ name }) => {\r\n  let cardImage;\r\n\r\n  switch (name) {\r\n    case \"blank\":\r\n      cardImage = <img className=\"card-image\" src={CardBack} alt=\"card\" />;\r\n      break;\r\n    case \"Two of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={TwoClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Three of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={ThreeClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Four of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={FourClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Five of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={FiveClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Six of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={SixClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Seven of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={SevenClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Eight of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={EightClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Nine of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={NineClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Ten of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={TenClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Jack of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={JackClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Queen of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={QueenClubs} alt=\"card\" />;\r\n      break;\r\n    case \"King of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={KingClubs} alt=\"card\" />;\r\n      break;\r\n    case \"Ace of Clubs\":\r\n      cardImage = <img className=\"card-image\" src={AceClubs} alt=\"card\" />;\r\n      break;\r\n\r\n    case \"Two of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={TwoDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Three of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={ThreeDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Four of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={FourDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Five of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={FiveDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Six of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={SixDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Seven of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={SevenDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Eight of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={EightDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Nine of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={NineDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Ten of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={TenDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Jack of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={JackDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Queen of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={QueenDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"King of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={KingDiamonds} alt=\"card\" />;\r\n      break;\r\n    case \"Ace of Diamonds\":\r\n      cardImage = <img className=\"card-image\" src={AceDiamonds} alt=\"card\" />;\r\n      break;\r\n\r\n    case \"Two of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={TwoHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Three of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={ThreeHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Four of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={FourHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Five of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={FiveHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Six of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={SixHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Seven of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={SevenHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Eight of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={EightHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Nine of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={NineHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Ten of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={TenHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Jack of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={JackHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Queen of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={QueenHearts} alt=\"card\" />;\r\n      break;\r\n    case \"King of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={KingHearts} alt=\"card\" />;\r\n      break;\r\n    case \"Ace of Hearts\":\r\n      cardImage = <img className=\"card-image\" src={AceHearts} alt=\"card\" />;\r\n      break;\r\n\r\n    case \"Two of Spades\":\r\n      cardImage = <img className=\"card-image\" src={TwoSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Three of Spades\":\r\n      cardImage = <img className=\"card-image\" src={ThreeSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Four of Spades\":\r\n      cardImage = <img className=\"card-image\" src={FourSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Five of Spades\":\r\n      cardImage = <img className=\"card-image\" src={FiveSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Six of Spades\":\r\n      cardImage = <img className=\"card-image\" src={SixSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Seven of Spades\":\r\n      cardImage = <img className=\"card-image\" src={SevenSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Eight of Spades\":\r\n      cardImage = <img className=\"card-image\" src={EightSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Nine of Spades\":\r\n      cardImage = <img className=\"card-image\" src={NineSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Ten of Spades\":\r\n      cardImage = <img className=\"card-image\" src={TenSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Jack of Spades\":\r\n      cardImage = <img className=\"card-image\" src={JackSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Queen of Spades\":\r\n      cardImage = <img className=\"card-image\" src={QueenSpades} alt=\"card\" />;\r\n      break;\r\n    case \"King of Spades\":\r\n      cardImage = <img className=\"card-image\" src={KingSpades} alt=\"card\" />;\r\n      break;\r\n    case \"Ace of Spades\":\r\n      cardImage = <img className=\"card-image\" src={AceSpades} alt=\"card\" />;\r\n      break;\r\n\r\n    default:\r\n  }\r\n\r\n  return <div>{cardImage}</div>;\r\n};\r\nCard.propTypes = {\r\n  name: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../Card/Card.js\";\r\n\r\nconst Board = ({ board }) => {\r\n  return (\r\n    <div className=\"board\">\r\n      {board.map((item, index) => (\r\n        <div className=\"board-card\" key={index}>\r\n          <Card name={item.name} />\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nBoard.propTypes = {\r\n  board: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Card from \"../Card/Card.js\";\r\n\r\nconst Hand = ({ handCards }) => {\r\n  return (\r\n    <div className=\"hand\">\r\n      <div className=\"hand-card\">\r\n        <Card name={handCards[0].name} />\r\n      </div>\r\n      <div className=\"hand-card\">\r\n        <Card name={handCards[1].name} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nHand.propTypes = {\r\n  handCards: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Results = ({ bestHand }) => {\r\n  return (\r\n    <div className=\"results\">\r\n      <p>Best Hand: {bestHand}</p>\r\n    </div>\r\n  );\r\n};\r\nResults.propTypes = {\r\n  bestHand: PropTypes.string\r\n};\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Controls from \"./Controls/Controls.js\";\nimport Board from \"./Board/Board.js\";\nimport Hand from \"./Hand/Hand.js\";\nimport Results from \"./Results/Results.js\";\n\nconst blankCard = {\n  name: \"blank\",\n  value: \"blank\",\n  suit: \"blank\",\n  numericalValue: \"blank\"\n};\n\nclass App extends Component {\n  state = {\n    deck: [],\n    hand: [blankCard, blankCard],\n    board: [blankCard, blankCard, blankCard, blankCard, blankCard],\n    bestHand: \"\"\n  };\n  componentDidMount() {\n    this.shuffleDeckHandler();\n  }\n\n  shuffleDeckHandler = () => {\n    function Card(name, value, suit, numericalValue) {\n      this.name = name;\n      this.value = value;\n      this.suit = suit;\n      this.numericalValue = numericalValue;\n    }\n    let deck = [];\n    const suits = [\"Clubs\", \"Diamonds\", \"Hearts\", \"Spades\"];\n    const values = [\n      \"Two\",\n      \"Three\",\n      \"Four\",\n      \"Five\",\n      \"Six\",\n      \"Seven\",\n      \"Eight\",\n      \"Nine\",\n      \"Ten\",\n      \"Jack\",\n      \"Queen\",\n      \"King\",\n      \"Ace\"\n    ];\n    const numericalValues = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    //populate deck\n    for (let i = 0; i < suits.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        const cardName = values[j] + \" of \" + suits[i];\n        const cardInstance = new Card(\n          cardName,\n          values[j],\n          suits[i],\n          numericalValues[j]\n        );\n        deck.push(cardInstance);\n      }\n    }\n    const blankCard = {\n      name: \"blank\",\n      value: \"blank\",\n      suit: \"blank\",\n      numericalValue: \"blank\"\n    };\n    //reset hand and board\n    const resetHand = [blankCard, blankCard];\n    const resetBoard = [blankCard, blankCard, blankCard, blankCard, blankCard];\n    this.setState({\n      deck: deck,\n      hand: resetHand,\n      board: resetBoard,\n      bestHand: \"\"\n    });\n  };\n  drawHandHandler = () => {\n    let deckCopy = Object.assign([], this.state.deck);\n\n    let hand = [];\n    if (deckCopy.length === 52) {\n      const card1Index = Math.floor(Math.random() * deckCopy.length);\n      const card1 = deckCopy[card1Index];\n      deckCopy.splice(card1Index, 1);\n      const card2Index = Math.floor(Math.random() * deckCopy.length);\n      const card2 = deckCopy[card2Index];\n      deckCopy.splice(card2Index, 1);\n      hand = [card1, card2];\n    }\n    const bestHand = this.determineBestHand(hand, []);\n\n    this.setState({ hand, deck: deckCopy, bestHand: bestHand });\n  };\n  drawBoardHandler = () => {\n    const currentBoard = this.state.board;\n    let deckCopy = Object.assign([], this.state.deck);\n    let boardCopy = Object.assign([], this.state.board);\n    if (currentBoard[0].name === \"blank\") {\n      const board1Index = Math.floor(Math.random() * deckCopy.length);\n      const board1 = deckCopy[board1Index];\n      deckCopy.splice(board1Index, 1);\n      const board2Index = Math.floor(Math.random() * deckCopy.length);\n      const board2 = deckCopy[board2Index];\n      deckCopy.splice(board2Index, 1);\n      const board3Index = Math.floor(Math.random() * deckCopy.length);\n      const board3 = deckCopy[board3Index];\n      deckCopy.splice(board3Index, 1);\n      boardCopy.splice(0, 3);\n      boardCopy.unshift(board3);\n      boardCopy.unshift(board2);\n      boardCopy.unshift(board1);\n\n      const bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n      this.setState({ board: boardCopy, deck: deckCopy, bestHand: bestHand });\n    } else if (currentBoard[3].name === \"blank\") {\n      const board4Index = Math.floor(Math.random() * deckCopy.length);\n      const board4 = deckCopy[board4Index];\n      deckCopy.splice(board4Index, 1);\n      boardCopy.splice(3, 1, board4);\n\n      const bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n      this.setState({ board: boardCopy, deck: deckCopy, bestHand: bestHand });\n    } else if (currentBoard[4].name === \"blank\") {\n      const board5Index = Math.floor(Math.random() * deckCopy.length);\n      const board5 = deckCopy[board5Index];\n      deckCopy.splice(board5Index, 1);\n      boardCopy.splice(4, 1, board5);\n\n      const bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n      this.setState({ board: boardCopy, deck: deckCopy, bestHand: bestHand });\n    }\n  };\n  determineBestHand = (hand, board) => {\n    //combine board and hand\n    const allCards = hand.concat(board);\n    //create values array\n    let cardValues = [];\n    allCards.forEach(card => {\n      cardValues.push(card.numericalValue);\n    });\n    //create suits array\n    let cardSuits = [];\n    allCards.forEach(card => {\n      cardSuits.push(card.suit);\n    });\n    //enumerate possible straights\n    let possibleStraights = [];\n    for (let i = 10; i > 1; i--) {\n      const straight = [i, i + 1, i + 2, i + 3, i + 4];\n      possibleStraights.push(straight);\n    }\n    possibleStraights.push([14, 2, 3, 4, 5]);\n\n    //enumerate card cardValues and suits\n    const allValues = [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2];\n    const allSuits = [\"Spades\", \"Hearts\", \"Diamonds\", \"Clubs\"];\n\n    //check hand for royal flush\n    const broadway = [10, 11, 12, 13, 14];\n    for (let i = 0; i < allSuits.length; i++) {\n      const suitCount = cardSuits.filter(suit => suit === allSuits[i]);\n      if (suitCount.length > 4) {\n        const flushCards = allCards.filter(card => card.suit === allSuits[i]);\n        let flushValues = [];\n        flushCards.forEach(card => {\n          flushValues.push(card.numericalValue);\n        });\n        const straightMade = broadway.every(\n          card => flushValues.indexOf(card) > -1\n        );\n        if (straightMade === true) {\n          return `${allSuits[i]} Royal Flush`;\n        }\n      }\n    }\n    //check hand for straight flush\n    for (let i = 0; i < allSuits.length; i++) {\n      const suitCount = cardSuits.filter(suit => suit === allSuits[i]);\n      if (suitCount.length > 4) {\n        const flushCards = allCards.filter(card => card.suit === allSuits[i]);\n        let flushValues = [];\n        flushCards.forEach(card => {\n          flushValues.push(card.numericalValue);\n        });\n        for (let j = 0; j < possibleStraights.length; j++) {\n          const straightMade = possibleStraights[j].every(\n            card => flushValues.indexOf(card) > -1\n          );\n          if (straightMade === true) {\n            const straight = possibleStraights[j];\n            const maxValue = Math.max(...straight);\n            const cardName = this.convertValueToName(maxValue);\n            return `${cardName}-high ${allSuits[i]} Straight Flush`;\n          }\n        }\n      }\n    }\n    //check hand for four of a kind\n    for (let i = 0; i < allValues.length; i++) {\n      const cardCount = cardValues.filter(card => card === allValues[i]);\n      if (cardCount.length === 4) {\n        const cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Four of a kind ${cardName}s`;\n      }\n    }\n    //check hand for full house\n    for (let i = 0; i < allValues.length; i++) {\n      const firstCount = cardValues.filter(card => card === allValues[i]);\n      if (firstCount.length === 3) {\n        const higherPair = this.convertValueToPluralName(firstCount[0]);\n        const remainingValues = cardValues.filter(\n          card => card !== allValues[i]\n        );\n        for (let j = 0; j < allValues.length; j++) {\n          const secondCount = remainingValues.filter(\n            card => card === allValues[j]\n          );\n          if (secondCount.length === 2) {\n            const lowerPair = this.convertValueToPluralName(secondCount[0]);\n            return `Full House, ${higherPair}s over ${lowerPair}s`;\n          }\n        }\n      }\n    }\n    //check hand for flush\n    for (let i = 0; i < allSuits.length; i++) {\n      const suitCount = cardSuits.filter(suit => suit === allSuits[i]);\n      if (suitCount.length > 4) {\n        const flushCards = allCards.filter(card => card.suit === allSuits[i]);\n        let flushValues = [];\n        flushCards.forEach(card => {\n          flushValues.push(card.numericalValue);\n        });\n        const flushMax = Math.max(...flushValues);\n        const cardName = this.convertValueToName(flushMax);\n        return `${cardName}-high ${allSuits[i]} Flush`;\n      }\n    }\n    //check hand for straight\n    for (let i = 0; i < possibleStraights.length; i++) {\n      const straightMade = possibleStraights[i].every(\n        card => cardValues.indexOf(card) > -1\n      );\n      if (straightMade === true) {\n        const straight = possibleStraights[i];\n        const maxValue = Math.max(...straight);\n        const cardName = this.convertValueToName(maxValue);\n        return `${cardName}-high Straight`;\n      }\n    }\n    //check hand for three of a kind\n    for (let i = 0; i < allValues.length; i++) {\n      const cardCount = cardValues.filter(card => card === allValues[i]);\n      if (cardCount.length === 3) {\n        const cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Three of a kind, ${cardName}s`;\n      }\n    }\n    //check hand for two pair\n    for (let i = 0; i < allValues.length; i++) {\n      const firstCount = cardValues.filter(card => card === allValues[i]);\n      if (firstCount.length === 2) {\n        const higherPair = this.convertValueToPluralName(firstCount[0]);\n        const remainingValues = cardValues.filter(\n          card => card !== allValues[i]\n        );\n        for (let j = 0; j < allValues.length; j++) {\n          const secondCount = remainingValues.filter(\n            card => card === allValues[j]\n          );\n          if (secondCount.length === 2) {\n            const lowerPair = this.convertValueToPluralName(secondCount[0]);\n            return `Two Pair, ${higherPair}s over ${lowerPair}s`;\n          }\n        }\n      }\n    }\n    //check hand for pair\n    for (let i = 0; i < allValues.length; i++) {\n      const cardCount = cardValues.filter(card => card === allValues[i]);\n      if (cardCount.length === 2) {\n        const cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Pair of ${cardName}s`;\n      }\n    }\n    //check hand for high card\n    for (let i = 0; i < allValues.length; i++) {\n      if (cardValues.indexOf(allValues[i]) >= 0) {\n        const cardName = this.convertValueToName(allValues[i]);\n        return `High Card ${cardName}`;\n      }\n    }\n  };\n\n  convertValueToName = value => {\n    switch (value) {\n      case 2:\n        return \"Two\";\n      case 3:\n        return \"Three\";\n      case 4:\n        return \"Four\";\n      case 5:\n        return \"Five\";\n      case 6:\n        return \"Six\";\n      case 7:\n        return \"Seven\";\n      case 8:\n        return \"Eight\";\n      case 9:\n        return \"Nine\";\n      case 10:\n        return \"Ten\";\n      case 11:\n        return \"Jack\";\n      case 12:\n        return \"Queen\";\n      case 13:\n        return \"King\";\n      case 14:\n        return \"Ace\";\n      default:\n    }\n  };\n\n  convertValueToPluralName = value => {\n    if (value === 6) {\n      return \"Sixe\";\n    } else {\n      return this.convertValueToName(value);\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br />\n        <h1>Poker Hand Simulator</h1>\n        <div className=\"card-display\">\n          <Board board={this.state.board} />\n          <Hand handCards={this.state.hand} />\n        </div>\n        <div className=\"controls-display\">\n          <Results bestHand={this.state.bestHand} />\n          <Controls\n            shuffle={this.shuffleDeckHandler}\n            dealHand={this.drawHandHandler}\n            dealBoard={this.drawBoardHandler}\n            handStatus={this.state.hand[0].name}\n            boardStatus={this.state.board}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}