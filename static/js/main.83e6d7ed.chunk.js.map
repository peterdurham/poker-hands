{"version":3,"sources":["assets/card-back.png","assets/2C.png","assets/3C.png","assets/4C.png","assets/5C.png","assets/6C.png","assets/7C.png","assets/8C.png","assets/9C.png","assets/10C.png","assets/JC.png","assets/QC.png","assets/KC.png","assets/AC.png","assets/2D.png","assets/3D.png","assets/4D.png","assets/5D.png","assets/6D.png","assets/7D.png","assets/8D.png","assets/9D.png","assets/10D.png","assets/JD.png","assets/QD.png","assets/KD.png","assets/AD.png","assets/2H.png","assets/3H.png","assets/4H.png","assets/5H.png","assets/6H.png","assets/7H.png","assets/8H.png","assets/9H.png","assets/10H.png","assets/JH.png","assets/QH.png","assets/KH.png","assets/AH.png","assets/2S.png","assets/3S.png","assets/4S.png","assets/5S.png","assets/6S.png","assets/7S.png","assets/8S.png","assets/9S.png","assets/10S.png","assets/JS.png","assets/QS.png","assets/KS.png","assets/AS.png","Controls/Controls.js","Card/Card.js","Board/Board.js","Hand/Hand.js","Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Controls","props","dealHand","handStatus","react_default","a","createElement","className","onClick","dealFlop","flopStatus","dealBoard","dealTurn","turnStatus","dealRiver","riverStatus","handComplete","disabled","shuffle","Card","cardImage","name","src","CardBack","alt","TwoClubs","ThreeClubs","FourClubs","FiveClubs","SixClubs","SevenClubs","EightClubs","NineClubs","TenClubs","JackClubs","QueenClubs","KingClubs","AceClubs","TwoDiamonds","ThreeDiamonds","FourDiamonds","FiveDiamonds","SixDiamonds","SevenDiamonds","EightDiamonds","NineDiamonds","TenDiamonds","JackDiamonds","QueenDiamonds","KingDiamonds","AceDiamonds","TwoHearts","ThreeHearts","FourHearts","FiveHearts","SixHearts","SevenHearts","EightHearts","NineHearts","TenHearts","JackHearts","QueenHearts","KingHearts","AceHearts","TwoSpades","ThreeSpades","FourSpades","FiveSpades","SixSpades","SevenSpades","EightSpades","NineSpades","TenSpades","JackSpades","QueenSpades","KingSpades","AceSpades","Board","src_Card_Card","board1","board2","board3","board4","board5","Hand","hand1","hand2","Results","bestHand","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shuffleDeckHandler","value","suit","numericalValue","deck","suits","values","numericalValues","i","length","j","cardInstance","push","setState","hand","board","drawHandHandler","deckCopy","assign","state","card1Index","Math","floor","random","card1","splice","card2Index","card2","determineBestHand","drawBoardHandler","currentBoard","boardCopy","board1Index","board2Index","board3Index","unshift","board4Index","board5Index","allCards","concat","cardValues","forEach","card","cardSuits","possibleStraights","straight","allValues","allSuits","broadway","_loop","filter","flushCards","flushValues","every","indexOf","v","_ret","_loop2","_ret9","maxValue","max","apply","toConsumableArray","cardName","convertValueToName","_ret2","_loop3","cardCount","convertValueToPluralName","_ret3","_loop4","firstCount","higherPair","remainingValues","_loop9","secondCount","lowerPair","_ret10","_ret4","_loop5","flushMax","_ret5","_loop6","_ret6","_loop7","_loop10","_ret11","_ret7","_loop8","_ret8","bind","assertThisInitialized","src_Board_Board","src_Hand_Hand","src_Results_Results","src_Controls_Controls","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC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","file":"static/js/main.83e6d7ed.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-back.6ca01611.png\";","module.exports = __webpack_public_path__ + \"static/media/2C.136dab43.png\";","module.exports = __webpack_public_path__ + \"static/media/3C.6ed5bf64.png\";","module.exports = __webpack_public_path__ + \"static/media/4C.23c51e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/5C.3ac88edd.png\";","module.exports = __webpack_public_path__ + \"static/media/6C.5c96f40f.png\";","module.exports = __webpack_public_path__ + \"static/media/7C.4808cc41.png\";","module.exports = __webpack_public_path__ + \"static/media/8C.a46a54d9.png\";","module.exports = __webpack_public_path__ + \"static/media/9C.4f8d0d8f.png\";","module.exports = __webpack_public_path__ + \"static/media/10C.19635027.png\";","module.exports = __webpack_public_path__ + \"static/media/JC.1595a3ea.png\";","module.exports = __webpack_public_path__ + \"static/media/QC.d6296277.png\";","module.exports = __webpack_public_path__ + \"static/media/KC.aa73cfd0.png\";","module.exports = __webpack_public_path__ + \"static/media/AC.17ca9f77.png\";","module.exports = __webpack_public_path__ + \"static/media/2D.1451de5d.png\";","module.exports = __webpack_public_path__ + \"static/media/3D.690d5a47.png\";","module.exports = __webpack_public_path__ + \"static/media/4D.89eaac32.png\";","module.exports = __webpack_public_path__ + \"static/media/5D.24fd440c.png\";","module.exports = __webpack_public_path__ + \"static/media/6D.ff1c6299.png\";","module.exports = __webpack_public_path__ + \"static/media/7D.58d872f0.png\";","module.exports = __webpack_public_path__ + \"static/media/8D.fcafeaf2.png\";","module.exports = __webpack_public_path__ + \"static/media/9D.1d495bb1.png\";","module.exports = __webpack_public_path__ + \"static/media/10D.39ef422e.png\";","module.exports = __webpack_public_path__ + \"static/media/JD.d5682eb4.png\";","module.exports = __webpack_public_path__ + \"static/media/QD.6940967d.png\";","module.exports = __webpack_public_path__ + \"static/media/KD.6b5b30c0.png\";","module.exports = __webpack_public_path__ + \"static/media/AD.f37d608f.png\";","module.exports = __webpack_public_path__ + \"static/media/2H.ebe43495.png\";","module.exports = __webpack_public_path__ + \"static/media/3H.7278d51d.png\";","module.exports = __webpack_public_path__ + \"static/media/4H.6695f1d5.png\";","module.exports = __webpack_public_path__ + \"static/media/5H.5457f189.png\";","module.exports = __webpack_public_path__ + \"static/media/6H.84564e31.png\";","module.exports = __webpack_public_path__ + \"static/media/7H.c8475b53.png\";","module.exports = __webpack_public_path__ + \"static/media/8H.1e9e59b0.png\";","module.exports = __webpack_public_path__ + \"static/media/9H.33ab7891.png\";","module.exports = __webpack_public_path__ + \"static/media/10H.60ab387c.png\";","module.exports = __webpack_public_path__ + \"static/media/JH.fdf4ffc4.png\";","module.exports = __webpack_public_path__ + \"static/media/QH.63afa62b.png\";","module.exports = __webpack_public_path__ + \"static/media/KH.3b48ae82.png\";","module.exports = __webpack_public_path__ + \"static/media/AH.a762540d.png\";","module.exports = __webpack_public_path__ + \"static/media/2S.33c964ae.png\";","module.exports = __webpack_public_path__ + \"static/media/3S.9638bf9f.png\";","module.exports = __webpack_public_path__ + \"static/media/4S.5156259e.png\";","module.exports = __webpack_public_path__ + \"static/media/5S.5ab3d862.png\";","module.exports = __webpack_public_path__ + \"static/media/6S.c99b0f04.png\";","module.exports = __webpack_public_path__ + \"static/media/7S.82d62864.png\";","module.exports = __webpack_public_path__ + \"static/media/8S.497eed1e.png\";","module.exports = __webpack_public_path__ + \"static/media/9S.50caac18.png\";","module.exports = __webpack_public_path__ + \"static/media/10S.b208cd7f.png\";","module.exports = __webpack_public_path__ + \"static/media/JS.89d2c97e.png\";","module.exports = __webpack_public_path__ + \"static/media/QS.9026849b.png\";","module.exports = __webpack_public_path__ + \"static/media/KS.e8d1a4cf.png\";","module.exports = __webpack_public_path__ + \"static/media/AS.e6a6d2f8.png\";","import React from 'react';\r\n\r\nconst Controls = (props) => {\r\n  let dealHand = (props.handStatus === \"blank\") ?\r\n  <button className=\"controls-button\" onClick={props.dealHand}>Deal Hand</button> : null\r\n  let dealFlop = (props.flopStatus === \"blank\" && props.handStatus !== \"blank\") ?\r\n  <button className=\"controls-button\" onClick={props.dealBoard}>Deal Flop</button> : null\r\n  let dealTurn = (props.turnStatus === \"blank\" && props.flopStatus !== \"blank\" ) ?\r\n  <button className=\"controls-button\" onClick={props.dealBoard}>Deal Turn</button> : null\r\n  let dealRiver = (props.riverStatus === \"blank\" && props.turnStatus !== \"blank\") ?\r\n  <button className=\"controls-button\" onClick={props.dealBoard}>Deal River</button> : null\r\n  let handComplete = (props.riverStatus !== \"blank\") ?\r\n  <button disabled className=\"hand-complete controls-button\">Hand Complete</button> : null\r\n\r\n  return(\r\n    <div>\r\n      <br/>\r\n      <button className=\"controls-button\" onClick={props.shuffle}>Reset Hand</button>\r\n      {dealHand}{dealFlop}{dealTurn}{dealRiver}{handComplete}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Controls;\r\n","import React from 'react';\r\n\r\nimport CardBack from '../assets/card-back.png';\r\nimport TwoClubs from '../assets/2C.png';\r\nimport ThreeClubs from '../assets/3C.png';\r\nimport FourClubs from '../assets/4C.png';\r\nimport FiveClubs from '../assets/5C.png';\r\nimport SixClubs from '../assets/6C.png';\r\nimport SevenClubs from '../assets/7C.png';\r\nimport EightClubs from '../assets/8C.png';\r\nimport NineClubs from '../assets/9C.png';\r\nimport TenClubs from '../assets/10C.png';\r\nimport JackClubs from '../assets/JC.png';\r\nimport QueenClubs from '../assets/QC.png';\r\nimport KingClubs from '../assets/KC.png';\r\nimport AceClubs from '../assets/AC.png';\r\nimport TwoDiamonds from '../assets/2D.png';\r\nimport ThreeDiamonds from '../assets/3D.png';\r\nimport FourDiamonds from '../assets/4D.png';\r\nimport FiveDiamonds from '../assets/5D.png';\r\nimport SixDiamonds from '../assets/6D.png';\r\nimport SevenDiamonds from '../assets/7D.png';\r\nimport EightDiamonds from '../assets/8D.png';\r\nimport NineDiamonds from '../assets/9D.png';\r\nimport TenDiamonds from '../assets/10D.png';\r\nimport JackDiamonds from '../assets/JD.png';\r\nimport QueenDiamonds from '../assets/QD.png';\r\nimport KingDiamonds from '../assets/KD.png';\r\nimport AceDiamonds from '../assets/AD.png';\r\nimport TwoHearts from '../assets/2H.png';\r\nimport ThreeHearts from '../assets/3H.png';\r\nimport FourHearts from '../assets/4H.png';\r\nimport FiveHearts from '../assets/5H.png';\r\nimport SixHearts from '../assets/6H.png';\r\nimport SevenHearts from '../assets/7H.png';\r\nimport EightHearts from '../assets/8H.png';\r\nimport NineHearts from '../assets/9H.png';\r\nimport TenHearts from '../assets/10H.png';\r\nimport JackHearts from '../assets/JH.png';\r\nimport QueenHearts from '../assets/QH.png';\r\nimport KingHearts from '../assets/KH.png';\r\nimport AceHearts from '../assets/AH.png';\r\nimport TwoSpades from '../assets/2S.png';\r\nimport ThreeSpades from '../assets/3S.png';\r\nimport FourSpades from '../assets/4S.png';\r\nimport FiveSpades from '../assets/5S.png';\r\nimport SixSpades from '../assets/6S.png';\r\nimport SevenSpades from '../assets/7S.png';\r\nimport EightSpades from '../assets/8S.png';\r\nimport NineSpades from '../assets/9S.png';\r\nimport TenSpades from '../assets/10S.png';\r\nimport JackSpades from '../assets/JS.png';\r\nimport QueenSpades from '../assets/QS.png';\r\nimport KingSpades from '../assets/KS.png';\r\nimport AceSpades from '../assets/AS.png';\r\n\r\nconst Card = (props) => {\r\n  let cardImage;\r\n  if(props.name === \"blank\"){\r\n    cardImage = <img className=\"card-image\" src={CardBack} alt=\"Blank Card\"/>\r\n  } else if(props.name === \"Two of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={TwoClubs} alt=\"Two of Clubs\"/>\r\n  } else if(props.name === \"Three of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={ThreeClubs} alt=\"Three of Clubs\"/>\r\n  } else if(props.name === \"Four of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={FourClubs} alt=\"Four of Clubs\"/>\r\n  } else if(props.name === \"Five of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={FiveClubs} alt=\"Five of Clubs\"/>\r\n  } else if(props.name === \"Six of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={SixClubs} alt=\"Six of Clubs\"/>\r\n  } else if(props.name === \"Seven of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={SevenClubs} alt=\"Seven of Clubs\"/>\r\n  } else if(props.name === \"Eight of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={EightClubs} alt=\"Eight of Clubs\"/>\r\n  } else if(props.name === \"Nine of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={NineClubs} alt=\"Nine of Clubs\"/>\r\n  } else if(props.name === \"Ten of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={TenClubs} alt=\"Ten of Clubs\"/>\r\n  } else if(props.name === \"Jack of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={JackClubs} alt=\"Jack of Clubs\"/>\r\n  } else if(props.name === \"Queen of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={QueenClubs} alt=\"Queen of Clubs\"/>\r\n  } else if(props.name === \"King of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={KingClubs} alt=\"King of Clubs\"/>\r\n  } else if(props.name === \"Ace of Clubs\"){\r\n    cardImage = <img className=\"card-image\" src={AceClubs} alt=\"Ace of Clubs\"/>\r\n  } else if(props.name === \"Two of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={TwoDiamonds} alt=\"Two of Diamonds\"/>\r\n  } else if(props.name === \"Three of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={ThreeDiamonds} alt=\"Three of Diamonds\"/>\r\n  } else if(props.name === \"Four of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={FourDiamonds} alt=\"Four of Diamonds\"/>\r\n  } else if(props.name === \"Five of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={FiveDiamonds} alt=\"Five of Diamonds\"/>\r\n  } else if(props.name === \"Six of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={SixDiamonds} alt=\"Six of Diamonds\"/>\r\n  } else if(props.name === \"Seven of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={SevenDiamonds} alt=\"Seven of Diamonds\"/>\r\n  } else if(props.name === \"Eight of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={EightDiamonds} alt=\"Eight of Diamonds\"/>\r\n  } else if(props.name === \"Nine of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={NineDiamonds} alt=\"Nine of Diamonds\"/>\r\n  } else if(props.name === \"Ten of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={TenDiamonds} alt=\"Ten of Diamonds\"/>\r\n  } else if(props.name === \"Jack of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={JackDiamonds} alt=\"Jack of Diamonds\"/>\r\n  } else if(props.name === \"Queen of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={QueenDiamonds} alt=\"Queen of Diamonds\"/>\r\n  } else if(props.name === \"King of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={KingDiamonds} alt=\"King of Diamonds\"/>\r\n  } else if(props.name === \"Ace of Diamonds\"){\r\n    cardImage = <img className=\"card-image\" src={AceDiamonds} alt=\"Ace of Diamonds\"/>\r\n  } else if(props.name === \"Two of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={TwoHearts} alt=\"Two of Hearts\"/>\r\n  } else if(props.name === \"Three of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={ThreeHearts} alt=\"Three of Hearts\"/>\r\n  } else if(props.name === \"Four of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={FourHearts} alt=\"Four of Hearts\"/>\r\n  } else if(props.name === \"Five of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={FiveHearts} alt=\"Five of Hearts\"/>\r\n  } else if(props.name === \"Six of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={SixHearts} alt=\"Six of Hearts\"/>\r\n  } else if(props.name === \"Seven of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={SevenHearts} alt=\"Seven of Hearts\"/>\r\n  } else if(props.name === \"Eight of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={EightHearts} alt=\"Eight of Hearts\"/>\r\n  } else if(props.name === \"Nine of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={NineHearts} alt=\"Nine of Hearts\"/>\r\n  } else if(props.name === \"Ten of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={TenHearts} alt=\"Ten of Hearts\"/>\r\n  } else if(props.name === \"Jack of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={JackHearts} alt=\"Jack of Hearts\"/>\r\n  } else if(props.name === \"Queen of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={QueenHearts} alt=\"Queen of Hearts\"/>\r\n  } else if(props.name === \"King of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={KingHearts} alt=\"King of Hearts\"/>\r\n  } else if(props.name === \"Ace of Hearts\"){\r\n    cardImage = <img className=\"card-image\" src={AceHearts} alt=\"Ace of Hearts\"/>\r\n  } else if(props.name === \"Two of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={TwoSpades} alt=\"Two of Spades\"/>\r\n  } else if(props.name === \"Three of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={ThreeSpades} alt=\"Three of Spades\"/>\r\n  } else if(props.name === \"Four of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={FourSpades} alt=\"Four of Spades\"/>\r\n  } else if(props.name === \"Five of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={FiveSpades} alt=\"Five of Spades\"/>\r\n  } else if(props.name === \"Six of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={SixSpades} alt=\"Six of Spades\"/>\r\n  } else if(props.name === \"Seven of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={SevenSpades} alt=\"Seven of Spades\"/>\r\n  } else if(props.name === \"Eight of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={EightSpades} alt=\"Eight of Spades\"/>\r\n  } else if(props.name === \"Nine of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={NineSpades} alt=\"Nine of Spades\"/>\r\n  } else if(props.name === \"Ten of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={TenSpades} alt=\"Ten of Spades\"/>\r\n  } else if(props.name === \"Jack of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={JackSpades} alt=\"Jack of Spades\"/>\r\n  } else if(props.name === \"Queen of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={QueenSpades} alt=\"Queen of Spades\"/>\r\n  } else if(props.name === \"King of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={KingSpades} alt=\"King of Spades\"/>\r\n  } else if(props.name === \"Ace of Spades\"){\r\n    cardImage = <img className=\"card-image\" src={AceSpades} alt=\"Ace of Spades\"/>\r\n  }\r\n  return(\r\n    <div>\r\n      {cardImage}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Card;\r\n","import React from 'react';\r\n\r\nimport Card from '../Card/Card.js';\r\n\r\nconst Board = (props) => {\r\n  return(\r\n    <div className=\"board\">\r\n      <div className=\"board-card\"><Card name={props.board1} /></div>\r\n      <div className=\"board-card\"><Card name={props.board2} /></div>\r\n      <div className=\"board-card\"><Card name={props.board3} /></div>\r\n      <div className=\"board-card\"><Card name={props.board4} /></div>\r\n      <div className=\"board-card\"><Card name={props.board5} /></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Board;\r\n","import React from 'react';\r\n\r\nimport Card from '../Card/Card.js';\r\n\r\nconst Hand = (props) => {\r\n  return(\r\n    <div className=\"hand\">\r\n      <div className=\"hand-card\"><Card name={props.hand1} /></div>\r\n      <div className=\"hand-card\"><Card name={props.hand2} /></div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Hand;\r\n","import React from 'react';\r\n\r\nconst Results = (props) => {\r\n  return(\r\n    <div className=\"results\">\r\n      <p>Best Hand: {props.bestHand}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Results;\r\n","import React, { Component } from 'react';\n\nimport './App.css';\nimport Controls from './Controls/Controls.js';\nimport Board from './Board/Board.js';\nimport Hand from './Hand/Hand.js';\nimport Results from './Results/Results.js';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.shuffleDeckHandler = this.shuffleDeckHandler.bind(this);\n    this.drawHandHandler = this.drawHandHandler.bind(this);\n    this.drawBoardHandler = this.drawBoardHandler.bind(this);\n    this.state ={\n      deck: [],\n      hand: [\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'}\n      ],\n      board: [\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'}\n      ],\n      bestHand: ''\n    }\n  }\n  componentDidMount() {\n    this.shuffleDeckHandler();\n  }\n\n  shuffleDeckHandler = () => {\n      function Card(name, value, suit, numericalValue){\n        this.name = name;\n        this.value = value;\n        this.suit = suit;\n        this.numericalValue = numericalValue;\n      }\n      let deck = [];\n      let suits = ['Clubs', 'Diamonds', 'Hearts', 'Spades'];\n      let values = ['Two', 'Three', 'Four', 'Five', 'Six', 'Seven', 'Eight', 'Nine', 'Ten', 'Jack', 'Queen', 'King', 'Ace'];\n      let numericalValues = [2,3,4,5,6,7,8,9,10,11,12,13,14];\n      //populate deck\n      for(let i = 0 ; i < suits.length ; i++){\n        for(let j = 0 ; j < values.length ; j++){\n          let cardName = values[j] + ' of ' + suits[i];\n          let cardInstance = new Card(cardName, values[j], suits[i], numericalValues[j]);\n          deck.push(cardInstance);\n        }\n      }\n      //reset hand and board\n      let resetHand = [\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'}\n      ];\n      let resetBoard = [\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'},\n        {name: 'blank', value: 'blank', suit: 'blank', numericalValue: 'blank'}\n      ]\n      this.setState({deck: deck, hand: resetHand, board: resetBoard, bestHand: ''});\n  }\n  drawHandHandler = () => {\n      let deckCopy = Object.assign([], this.state.deck);\n\n      let hand = [];\n      if(deckCopy.length === 52){\n        let card1Index = Math.floor(Math.random()*deckCopy.length);\n        let card1 = deckCopy[card1Index];\n        deckCopy.splice(card1Index, 1);\n        let card2Index = Math.floor(Math.random()*deckCopy.length);\n        let card2 = deckCopy[card2Index];\n        deckCopy.splice(card2Index, 1);\n        hand = [card1, card2];\n      }\n      let bestHand = this.determineBestHand(hand, [])\n\n      this.setState({hand, deck: deckCopy, bestHand: bestHand})\n  }\n  drawBoardHandler = () => {\n      let currentBoard = this.state.board;\n      let deckCopy = Object.assign([], this.state.deck);\n      let boardCopy = Object.assign([], this.state.board);\n      if(currentBoard[0].name === 'blank'){\n\n        let board1Index = Math.floor(Math.random()*deckCopy.length);\n        let board1 = deckCopy[board1Index];\n        deckCopy.splice(board1Index, 1);\n        let board2Index = Math.floor(Math.random()*deckCopy.length);\n        let board2 = deckCopy[board2Index];\n        deckCopy.splice(board2Index, 1);\n        let board3Index = Math.floor(Math.random()*deckCopy.length);\n        let board3 = deckCopy[board3Index];\n        deckCopy.splice(board3Index, 1);\n        boardCopy.splice(0, 3);\n        boardCopy.unshift(board3);\n        boardCopy.unshift(board2);\n        boardCopy.unshift(board1);\n\n        let bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n        this.setState({board: boardCopy, deck: deckCopy, bestHand: bestHand});\n      } else if(currentBoard[3].name === 'blank'){\n        let board4Index = Math.floor(Math.random()*deckCopy.length);\n        let board4 = deckCopy[board4Index];\n        deckCopy.splice(board4Index, 1);\n        boardCopy.splice(3,1, board4);\n\n        let bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n        this.setState({board:boardCopy, deck:deckCopy, bestHand: bestHand});\n      } else if(currentBoard[4].name === 'blank'){\n        let board5Index = Math.floor(Math.random()*deckCopy.length);\n        let board5 = deckCopy[board5Index];\n        deckCopy.splice(board5Index, 1);\n        boardCopy.splice(4, 1, board5);\n\n        let bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n        this.setState({board:boardCopy, deck:deckCopy, bestHand: bestHand});\n      }\n  }\n  determineBestHand = (hand, board) => {\n    //combine board and hand\n    let allCards = hand.concat(board);\n    //create values array\n    let cardValues = [];\n    allCards.forEach((card)=>{\n      cardValues.push(card.numericalValue);\n    })\n    //create suits array\n    let cardSuits = [];\n    allCards.forEach((card)=>{\n      cardSuits.push(card.suit);\n    })\n    //enumerate possible straights\n    let possibleStraights = [];\n    for(let i=10;i>1;i--){\n      let straight = [i, i+1, i+2, i+3, i+4];\n      possibleStraights.push(straight);\n    }\n    possibleStraights.push([14,2,3,4,5])\n\n    //enumerate card cardValues and suits\n    let allValues = [14,13,12,11,10,9,8,7,6,5,4,3,2];\n    let allSuits = [\"Spades\", \"Hearts\", \"Diamonds\", \"Clubs\"];\n\n    //check hand for royal flush\n    let broadway = [10,11,12,13,14];\n    for(let i = 0; i<allSuits.length ; i++){\n      let suitCount = cardSuits.filter((suit) => suit === allSuits[i]);\n      if(suitCount.length > 4){\n        let flushCards = allCards.filter((card)=> card.suit === allSuits[i])\n        let flushValues = [];\n        flushCards.forEach((card)=>{\n          flushValues.push(card.numericalValue);\n        })\n          let straightMade = broadway.every(card => flushValues.indexOf(card) > -1);\n          if(straightMade === true){\n            return `${allSuits[i]} Royal Flush`\n          }\n      }\n    }\n    //check hand for straight flush\n    for(let i = 0; i<allSuits.length ; i++){\n      let suitCount = cardSuits.filter((suit) => suit === allSuits[i]);\n      if(suitCount.length > 4){\n        let flushCards = allCards.filter((card)=> card.suit === allSuits[i])\n        let flushValues = [];\n        flushCards.forEach((card)=>{\n          flushValues.push(card.numericalValue);\n        })\n        for(let j=0; j<possibleStraights.length; j++){\n          let straightMade = possibleStraights[j].every(card => flushValues.indexOf(card) > -1);\n          if(straightMade === true){\n            let straight = possibleStraights[j];\n            let maxValue = Math.max(...straight)\n            let cardName = this.convertValueToName(maxValue);\n            return `${cardName}-high ${allSuits[i]} Straight Flush`\n          }\n        }\n      }\n    }\n    //check hand for four of a kind\n    for(let i = 0; i<allValues.length ; i++){\n      let cardCount = cardValues.filter((card)=>card===allValues[i]);\n      if(cardCount.length === 4){\n        let cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Four of a kind ${cardName}s`\n      }\n    }\n    //check hand for full house\n    for(let i = 0; i<allValues.length ; i++){\n      let firstCount = cardValues.filter((card)=>card===allValues[i]);\n      if(firstCount.length === 3){\n        let higherPair = this.convertValueToPluralName(firstCount[0]);\n        let remainingValues = cardValues.filter((card)=>card!==allValues[i]);\n        for(let j = 0; j<allValues.length; j++){\n          let secondCount = remainingValues.filter((card)=>card===allValues[j]);\n          if(secondCount.length === 2){\n            let lowerPair = this.convertValueToPluralName(secondCount[0]);\n            return `Full House, ${higherPair}s over ${lowerPair}s`\n          }\n        }\n      }\n    }\n    //check hand for flush\n    for(let i = 0; i<allSuits.length ; i++){\n      let suitCount = cardSuits.filter((suit) => suit === allSuits[i]);\n      if(suitCount.length > 4){\n        let flushCards = allCards.filter((card)=> card.suit === allSuits[i])\n        let flushValues = [];\n        flushCards.forEach((card)=>{\n          flushValues.push(card.numericalValue);\n        })\n        let flushMax = Math.max(...flushValues);\n        let cardName = this.convertValueToName(flushMax);\n        return `${cardName}-high ${allSuits[i]} Flush`\n      }\n    }\n    //check hand for straight\n    for(let i=0; i<possibleStraights.length; i++){\n      let straightMade = possibleStraights[i].every(card => cardValues.indexOf(card) > -1);\n      if(straightMade === true){\n        let straight = possibleStraights[i];\n        let maxValue = Math.max(...straight)\n        let cardName = this.convertValueToName(maxValue);\n        return `${cardName}-high Straight`\n      }\n    }\n    //check hand for three of a kind\n    for(let i = 0; i<allValues.length ; i++){\n      let cardCount = cardValues.filter((card)=>card===allValues[i]);\n      if(cardCount.length === 3){\n        let cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Three of a kind, ${cardName}s`\n      }\n    }\n    //check hand for two pair\n    for(let i = 0; i<allValues.length ; i++){\n      let firstCount = cardValues.filter((card)=>card===allValues[i]);\n      if(firstCount.length === 2){\n        let higherPair = this.convertValueToPluralName(firstCount[0]);\n        let remainingValues = cardValues.filter((card)=>card!==allValues[i]);\n        for(let j = 0; j<allValues.length; j++){\n          let secondCount = remainingValues.filter((card)=>card===allValues[j]);\n          if(secondCount.length === 2){\n            let lowerPair = this.convertValueToPluralName(secondCount[0]);\n            return `Two Pair, ${higherPair}s over ${lowerPair}s`\n          }\n        }\n      }\n    }\n    //check hand for pair\n    for(let i = 0; i<allValues.length ; i++){\n      let cardCount = cardValues.filter((card)=>card===allValues[i]);\n      if(cardCount.length === 2){\n        let cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Pair of ${cardName}s`\n      }\n    }\n    //check hand for high card\n    for(let i=0; i<allValues.length ; i++){\n      if(cardValues.indexOf(allValues[i]) >= 0){\n        let cardName = this.convertValueToName(allValues[i]);\n        return `High Card ${cardName}`\n      }\n    }\n  }\n\n  convertValueToName = (value) => {\n    if(value === 2){\n      return 'Two'\n    } else if(value === 3){\n      return \"Three\"\n    } else if(value === 4){\n      return \"Four\"\n    } else if(value === 5){\n      return \"Five\"\n    } else if(value === 6){\n      return \"Six\"\n    } else if(value === 7){\n      return \"Seven\"\n    } else if(value === 8){\n      return \"Eight\"\n    } else if(value === 9){\n      return \"Nine\"\n    } else if(value === 10){\n      return \"Ten\"\n    } else if(value === 11){\n      return \"Jack\"\n    } else if(value === 12){\n      return \"Queen\"\n    } else if(value === 13){\n      return \"King\"\n    } else if(value === 14){\n      return \"Ace\"\n    }\n  }\n\n  convertValueToPluralName = (value) => {\n    if(value === 2){\n      return 'Two'\n    } else if(value === 3){\n      return \"Three\"\n    } else if(value === 4){\n      return \"Four\"\n    } else if(value === 5){\n      return \"Five\"\n    } else if(value === 6){\n      return \"Sixe\"\n    } else if(value === 7){\n      return \"Seven\"\n    } else if(value === 8){\n      return \"Eight\"\n    } else if(value === 9){\n      return \"Nine\"\n    } else if(value === 10){\n      return \"Ten\"\n    } else if(value === 11){\n      return \"Jack\"\n    } else if(value === 12){\n      return \"Queen\"\n    } else if(value === 13){\n      return \"King\"\n    } else if(value === 14){\n      return \"Ace\"\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br/>\n        <h1>Poker Hand Simulator</h1>\n        <div className=\"card-display\">\n          <Board\n            board1 = {this.state.board[0].name}\n            board2 = {this.state.board[1].name}\n            board3 = {this.state.board[2].name}\n            board4 = {this.state.board[3].name}\n            board5 = {this.state.board[4].name}\n          />\n          <Hand\n            hand1 = {this.state.hand[0].name}\n            hand2 = {this.state.hand[1].name}\n          />\n        </div>\n        <div className=\"controls-display\">\n          <Results\n            bestHand = {this.state.bestHand}\n          />\n          <Controls\n            shuffle = {this.shuffleDeckHandler}\n            dealHand = {this.drawHandHandler}\n            dealBoard = {this.drawBoardHandler}\n            handStatus = {this.state.hand[0].name}\n            flopStatus = {this.state.board[0].name}\n            turnStatus = {this.state.board[3].name}\n            riverStatus = {this.state.board[4].name}\n          />\n\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}