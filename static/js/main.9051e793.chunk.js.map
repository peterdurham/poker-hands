{"version":3,"sources":["assets/card-back.png","assets/2C.png","assets/3C.png","assets/4C.png","assets/5C.png","assets/6C.png","assets/7C.png","assets/8C.png","assets/9C.png","assets/10C.png","assets/JC.png","assets/QC.png","assets/KC.png","assets/AC.png","assets/2D.png","assets/3D.png","assets/4D.png","assets/5D.png","assets/6D.png","assets/7D.png","assets/8D.png","assets/9D.png","assets/10D.png","assets/JD.png","assets/QD.png","assets/KD.png","assets/AD.png","assets/2H.png","assets/3H.png","assets/4H.png","assets/5H.png","assets/6H.png","assets/7H.png","assets/8H.png","assets/9H.png","assets/10H.png","assets/JH.png","assets/QH.png","assets/KH.png","assets/AH.png","assets/2S.png","assets/3S.png","assets/4S.png","assets/5S.png","assets/6S.png","assets/7S.png","assets/8S.png","assets/9S.png","assets/10S.png","assets/JS.png","assets/QS.png","assets/KS.png","assets/AS.png","Controls/Controls.js","Card/Card.js","Board/Board.js","Hand/Hand.js","Results/Results.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Controls","props","dealHand","handStatus","react_default","a","createElement","data-testid","className","onClick","dealFlop","flopStatus","dealBoard","dealTurn","turnStatus","dealRiver","riverStatus","handComplete","disabled","shuffle","Card","cardImage","name","src","CardBack","alt","TwoClubs","ThreeClubs","FourClubs","FiveClubs","SixClubs","SevenClubs","EightClubs","NineClubs","TenClubs","JackClubs","QueenClubs","KingClubs","AceClubs","TwoDiamonds","ThreeDiamonds","FourDiamonds","FiveDiamonds","SixDiamonds","SevenDiamonds","EightDiamonds","NineDiamonds","TenDiamonds","JackDiamonds","QueenDiamonds","KingDiamonds","AceDiamonds","TwoHearts","ThreeHearts","FourHearts","FiveHearts","SixHearts","SevenHearts","EightHearts","NineHearts","TenHearts","JackHearts","QueenHearts","KingHearts","AceHearts","TwoSpades","ThreeSpades","FourSpades","FiveSpades","SixSpades","SevenSpades","EightSpades","NineSpades","TenSpades","JackSpades","QueenSpades","KingSpades","AceSpades","Board","src_Card_Card","board1","board2","board3","board4","board5","Hand","hand1","hand2","Results","_ref","bestHand","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","shuffleDeckHandler","value","suit","numericalValue","deck","suits","values","numericalValues","i","length","j","cardInstance","push","setState","hand","board","drawHandHandler","deckCopy","assign","state","card1Index","Math","floor","random","card1","splice","card2Index","card2","determineBestHand","drawBoardHandler","currentBoard","boardCopy","board1Index","board2Index","board3Index","unshift","board4Index","board5Index","allCards","concat","cardValues","forEach","card","cardSuits","possibleStraights","straight","allValues","allSuits","broadway","_loop","filter","flushCards","flushValues","every","indexOf","v","_ret","_loop2","_ret9","maxValue","max","apply","toConsumableArray","cardName","convertValueToName","_ret2","_loop3","cardCount","convertValueToPluralName","_ret3","_loop4","firstCount","higherPair","remainingValues","_loop9","secondCount","lowerPair","_ret10","_ret4","_loop5","flushMax","_ret5","_loop6","_ret6","_loop7","_loop10","_ret11","_ret7","_loop8","_ret8","bind","assertThisInitialized","src_Board_Board","src_Hand_Hand","src_Results_Results","src_Controls_Controls","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iFAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,gDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB,iDCAxCH,EAAAC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","file":"static/js/main.9051e793.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/card-back.6ca01611.png\";","module.exports = __webpack_public_path__ + \"static/media/2C.136dab43.png\";","module.exports = __webpack_public_path__ + \"static/media/3C.6ed5bf64.png\";","module.exports = __webpack_public_path__ + \"static/media/4C.23c51e0b.png\";","module.exports = __webpack_public_path__ + \"static/media/5C.3ac88edd.png\";","module.exports = __webpack_public_path__ + \"static/media/6C.5c96f40f.png\";","module.exports = __webpack_public_path__ + \"static/media/7C.4808cc41.png\";","module.exports = __webpack_public_path__ + \"static/media/8C.a46a54d9.png\";","module.exports = __webpack_public_path__ + \"static/media/9C.4f8d0d8f.png\";","module.exports = __webpack_public_path__ + \"static/media/10C.19635027.png\";","module.exports = __webpack_public_path__ + \"static/media/JC.1595a3ea.png\";","module.exports = __webpack_public_path__ + \"static/media/QC.d6296277.png\";","module.exports = __webpack_public_path__ + \"static/media/KC.aa73cfd0.png\";","module.exports = __webpack_public_path__ + \"static/media/AC.17ca9f77.png\";","module.exports = __webpack_public_path__ + \"static/media/2D.1451de5d.png\";","module.exports = __webpack_public_path__ + \"static/media/3D.690d5a47.png\";","module.exports = __webpack_public_path__ + \"static/media/4D.89eaac32.png\";","module.exports = __webpack_public_path__ + \"static/media/5D.24fd440c.png\";","module.exports = __webpack_public_path__ + \"static/media/6D.ff1c6299.png\";","module.exports = __webpack_public_path__ + \"static/media/7D.58d872f0.png\";","module.exports = __webpack_public_path__ + \"static/media/8D.fcafeaf2.png\";","module.exports = __webpack_public_path__ + \"static/media/9D.1d495bb1.png\";","module.exports = __webpack_public_path__ + \"static/media/10D.39ef422e.png\";","module.exports = __webpack_public_path__ + \"static/media/JD.d5682eb4.png\";","module.exports = __webpack_public_path__ + \"static/media/QD.6940967d.png\";","module.exports = __webpack_public_path__ + \"static/media/KD.6b5b30c0.png\";","module.exports = __webpack_public_path__ + \"static/media/AD.f37d608f.png\";","module.exports = __webpack_public_path__ + \"static/media/2H.ebe43495.png\";","module.exports = __webpack_public_path__ + \"static/media/3H.7278d51d.png\";","module.exports = __webpack_public_path__ + \"static/media/4H.6695f1d5.png\";","module.exports = __webpack_public_path__ + \"static/media/5H.5457f189.png\";","module.exports = __webpack_public_path__ + \"static/media/6H.84564e31.png\";","module.exports = __webpack_public_path__ + \"static/media/7H.c8475b53.png\";","module.exports = __webpack_public_path__ + \"static/media/8H.1e9e59b0.png\";","module.exports = __webpack_public_path__ + \"static/media/9H.33ab7891.png\";","module.exports = __webpack_public_path__ + \"static/media/10H.60ab387c.png\";","module.exports = __webpack_public_path__ + \"static/media/JH.fdf4ffc4.png\";","module.exports = __webpack_public_path__ + \"static/media/QH.63afa62b.png\";","module.exports = __webpack_public_path__ + \"static/media/KH.3b48ae82.png\";","module.exports = __webpack_public_path__ + \"static/media/AH.a762540d.png\";","module.exports = __webpack_public_path__ + \"static/media/2S.33c964ae.png\";","module.exports = __webpack_public_path__ + \"static/media/3S.9638bf9f.png\";","module.exports = __webpack_public_path__ + \"static/media/4S.5156259e.png\";","module.exports = __webpack_public_path__ + \"static/media/5S.5ab3d862.png\";","module.exports = __webpack_public_path__ + \"static/media/6S.c99b0f04.png\";","module.exports = __webpack_public_path__ + \"static/media/7S.82d62864.png\";","module.exports = __webpack_public_path__ + \"static/media/8S.497eed1e.png\";","module.exports = __webpack_public_path__ + \"static/media/9S.50caac18.png\";","module.exports = __webpack_public_path__ + \"static/media/10S.b208cd7f.png\";","module.exports = __webpack_public_path__ + \"static/media/JS.89d2c97e.png\";","module.exports = __webpack_public_path__ + \"static/media/QS.9026849b.png\";","module.exports = __webpack_public_path__ + \"static/media/KS.e8d1a4cf.png\";","module.exports = __webpack_public_path__ + \"static/media/AS.e6a6d2f8.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Controls = props => {\r\n  let dealHand =\r\n    props.handStatus === \"blank\" ? (\r\n      <button\r\n        data-testid=\"dealhand-button\"\r\n        className=\"controls-button\"\r\n        onClick={props.dealHand}\r\n      >\r\n        Deal Hand\r\n      </button>\r\n    ) : null;\r\n  let dealFlop =\r\n    props.flopStatus === \"blank\" && props.handStatus !== \"blank\" ? (\r\n      <button\r\n        data-testid=\"dealflop-button\"\r\n        className=\"controls-button\"\r\n        onClick={props.dealBoard}\r\n      >\r\n        Deal Flop\r\n      </button>\r\n    ) : null;\r\n  let dealTurn =\r\n    props.turnStatus === \"blank\" && props.flopStatus !== \"blank\" ? (\r\n      <button\r\n        data-testid=\"dealturn-button\"\r\n        className=\"controls-button\"\r\n        onClick={props.dealBoard}\r\n      >\r\n        Deal Turn\r\n      </button>\r\n    ) : null;\r\n  let dealRiver =\r\n    props.riverStatus === \"blank\" && props.turnStatus !== \"blank\" ? (\r\n      <button\r\n        data-testid=\"dealriver-button\"\r\n        className=\"controls-button\"\r\n        onClick={props.dealBoard}\r\n      >\r\n        Deal River\r\n      </button>\r\n    ) : null;\r\n  let handComplete =\r\n    props.riverStatus !== \"blank\" ? (\r\n      <button\r\n        data-testid=\"handcomplete-button\"\r\n        disabled\r\n        className=\"hand-complete controls-button\"\r\n      >\r\n        Hand Complete\r\n      </button>\r\n    ) : null;\r\n\r\n  return (\r\n    <div>\r\n      <br />\r\n      <button className=\"controls-button\" onClick={props.shuffle}>\r\n        Reset Hand\r\n      </button>\r\n      {dealHand}\r\n      {dealFlop}\r\n      {dealTurn}\r\n      {dealRiver}\r\n      {handComplete}\r\n    </div>\r\n  );\r\n};\r\nControls.propTypes = {\r\n  handStatus: PropTypes.string,\r\n  dealHand: PropTypes.func,\r\n  dealBoard: PropTypes.func,\r\n  flopStatus: PropTypes.string,\r\n  turnStatus: PropTypes.string,\r\n  riverStatus: PropTypes.string,\r\n\r\n  shuffle: PropTypes.func\r\n};\r\n\r\nexport default Controls;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport CardBack from \"../assets/card-back.png\";\r\nimport TwoClubs from \"../assets/2C.png\";\r\nimport ThreeClubs from \"../assets/3C.png\";\r\nimport FourClubs from \"../assets/4C.png\";\r\nimport FiveClubs from \"../assets/5C.png\";\r\nimport SixClubs from \"../assets/6C.png\";\r\nimport SevenClubs from \"../assets/7C.png\";\r\nimport EightClubs from \"../assets/8C.png\";\r\nimport NineClubs from \"../assets/9C.png\";\r\nimport TenClubs from \"../assets/10C.png\";\r\nimport JackClubs from \"../assets/JC.png\";\r\nimport QueenClubs from \"../assets/QC.png\";\r\nimport KingClubs from \"../assets/KC.png\";\r\nimport AceClubs from \"../assets/AC.png\";\r\nimport TwoDiamonds from \"../assets/2D.png\";\r\nimport ThreeDiamonds from \"../assets/3D.png\";\r\nimport FourDiamonds from \"../assets/4D.png\";\r\nimport FiveDiamonds from \"../assets/5D.png\";\r\nimport SixDiamonds from \"../assets/6D.png\";\r\nimport SevenDiamonds from \"../assets/7D.png\";\r\nimport EightDiamonds from \"../assets/8D.png\";\r\nimport NineDiamonds from \"../assets/9D.png\";\r\nimport TenDiamonds from \"../assets/10D.png\";\r\nimport JackDiamonds from \"../assets/JD.png\";\r\nimport QueenDiamonds from \"../assets/QD.png\";\r\nimport KingDiamonds from \"../assets/KD.png\";\r\nimport AceDiamonds from \"../assets/AD.png\";\r\nimport TwoHearts from \"../assets/2H.png\";\r\nimport ThreeHearts from \"../assets/3H.png\";\r\nimport FourHearts from \"../assets/4H.png\";\r\nimport FiveHearts from \"../assets/5H.png\";\r\nimport SixHearts from \"../assets/6H.png\";\r\nimport SevenHearts from \"../assets/7H.png\";\r\nimport EightHearts from \"../assets/8H.png\";\r\nimport NineHearts from \"../assets/9H.png\";\r\nimport TenHearts from \"../assets/10H.png\";\r\nimport JackHearts from \"../assets/JH.png\";\r\nimport QueenHearts from \"../assets/QH.png\";\r\nimport KingHearts from \"../assets/KH.png\";\r\nimport AceHearts from \"../assets/AH.png\";\r\nimport TwoSpades from \"../assets/2S.png\";\r\nimport ThreeSpades from \"../assets/3S.png\";\r\nimport FourSpades from \"../assets/4S.png\";\r\nimport FiveSpades from \"../assets/5S.png\";\r\nimport SixSpades from \"../assets/6S.png\";\r\nimport SevenSpades from \"../assets/7S.png\";\r\nimport EightSpades from \"../assets/8S.png\";\r\nimport NineSpades from \"../assets/9S.png\";\r\nimport TenSpades from \"../assets/10S.png\";\r\nimport JackSpades from \"../assets/JS.png\";\r\nimport QueenSpades from \"../assets/QS.png\";\r\nimport KingSpades from \"../assets/KS.png\";\r\nimport AceSpades from \"../assets/AS.png\";\r\n\r\nconst Card = props => {\r\n  let cardImage;\r\n  if (props.name === \"blank\") {\r\n    cardImage = <img className=\"card-image\" src={CardBack} alt=\"Blank Card\" />;\r\n  } else if (props.name === \"Two of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TwoClubs} alt=\"Two of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Three of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={ThreeClubs} alt=\"Three of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Four of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FourClubs} alt=\"Four of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Five of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FiveClubs} alt=\"Five of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Six of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SixClubs} alt=\"Six of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Seven of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SevenClubs} alt=\"Seven of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Eight of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={EightClubs} alt=\"Eight of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Nine of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={NineClubs} alt=\"Nine of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Ten of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TenClubs} alt=\"Ten of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Jack of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={JackClubs} alt=\"Jack of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Queen of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={QueenClubs} alt=\"Queen of Clubs\" />\r\n    );\r\n  } else if (props.name === \"King of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={KingClubs} alt=\"King of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Ace of Clubs\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={AceClubs} alt=\"Ace of Clubs\" />\r\n    );\r\n  } else if (props.name === \"Two of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TwoDiamonds} alt=\"Two of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Three of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={ThreeDiamonds} alt=\"Three of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Four of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FourDiamonds} alt=\"Four of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Five of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FiveDiamonds} alt=\"Five of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Six of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SixDiamonds} alt=\"Six of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Seven of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SevenDiamonds} alt=\"Seven of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Eight of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={EightDiamonds} alt=\"Eight of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Nine of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={NineDiamonds} alt=\"Nine of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Ten of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TenDiamonds} alt=\"Ten of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Jack of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={JackDiamonds} alt=\"Jack of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Queen of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={QueenDiamonds} alt=\"Queen of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"King of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={KingDiamonds} alt=\"King of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Ace of Diamonds\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={AceDiamonds} alt=\"Ace of Diamonds\" />\r\n    );\r\n  } else if (props.name === \"Two of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TwoHearts} alt=\"Two of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Three of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={ThreeHearts} alt=\"Three of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Four of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FourHearts} alt=\"Four of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Five of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FiveHearts} alt=\"Five of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Six of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SixHearts} alt=\"Six of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Seven of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SevenHearts} alt=\"Seven of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Eight of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={EightHearts} alt=\"Eight of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Nine of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={NineHearts} alt=\"Nine of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Ten of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TenHearts} alt=\"Ten of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Jack of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={JackHearts} alt=\"Jack of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Queen of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={QueenHearts} alt=\"Queen of Hearts\" />\r\n    );\r\n  } else if (props.name === \"King of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={KingHearts} alt=\"King of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Ace of Hearts\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={AceHearts} alt=\"Ace of Hearts\" />\r\n    );\r\n  } else if (props.name === \"Two of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TwoSpades} alt=\"Two of Spades\" />\r\n    );\r\n  } else if (props.name === \"Three of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={ThreeSpades} alt=\"Three of Spades\" />\r\n    );\r\n  } else if (props.name === \"Four of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FourSpades} alt=\"Four of Spades\" />\r\n    );\r\n  } else if (props.name === \"Five of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={FiveSpades} alt=\"Five of Spades\" />\r\n    );\r\n  } else if (props.name === \"Six of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SixSpades} alt=\"Six of Spades\" />\r\n    );\r\n  } else if (props.name === \"Seven of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={SevenSpades} alt=\"Seven of Spades\" />\r\n    );\r\n  } else if (props.name === \"Eight of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={EightSpades} alt=\"Eight of Spades\" />\r\n    );\r\n  } else if (props.name === \"Nine of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={NineSpades} alt=\"Nine of Spades\" />\r\n    );\r\n  } else if (props.name === \"Ten of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={TenSpades} alt=\"Ten of Spades\" />\r\n    );\r\n  } else if (props.name === \"Jack of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={JackSpades} alt=\"Jack of Spades\" />\r\n    );\r\n  } else if (props.name === \"Queen of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={QueenSpades} alt=\"Queen of Spades\" />\r\n    );\r\n  } else if (props.name === \"King of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={KingSpades} alt=\"King of Spades\" />\r\n    );\r\n  } else if (props.name === \"Ace of Spades\") {\r\n    cardImage = (\r\n      <img className=\"card-image\" src={AceSpades} alt=\"Ace of Spades\" />\r\n    );\r\n  }\r\n  return <div>{cardImage}</div>;\r\n};\r\nCard.propTypes = {\r\n  name: PropTypes.string\r\n};\r\n\r\nexport default Card;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Card from \"../Card/Card.js\";\r\n\r\nconst Board = props => {\r\n  return (\r\n    <div className=\"board\">\r\n      <div className=\"board-card\">\r\n        <Card name={props.board1} />\r\n      </div>\r\n      <div className=\"board-card\">\r\n        <Card name={props.board2} />\r\n      </div>\r\n      <div className=\"board-card\">\r\n        <Card name={props.board3} />\r\n      </div>\r\n      <div className=\"board-card\">\r\n        <Card name={props.board4} />\r\n      </div>\r\n      <div className=\"board-card\">\r\n        <Card name={props.board5} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nBoard.propTypes = {\r\n  board1: PropTypes.string,\r\n  board2: PropTypes.string,\r\n  board3: PropTypes.string,\r\n  board4: PropTypes.string,\r\n  board5: PropTypes.string\r\n};\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport Card from \"../Card/Card.js\";\r\n\r\nconst Hand = props => {\r\n  return (\r\n    <div className=\"hand\">\r\n      <div className=\"hand-card\">\r\n        <Card name={props.hand1} />\r\n      </div>\r\n      <div className=\"hand-card\">\r\n        <Card name={props.hand2} />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nHand.propTypes = {\r\n  hand1: PropTypes.string,\r\n  hand2: PropTypes.string\r\n};\r\n\r\nexport default Hand;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Results = ({ bestHand }) => {\r\n  return (\r\n    <div className=\"results\">\r\n      <p>Best Hand: {bestHand}</p>\r\n    </div>\r\n  );\r\n};\r\nResults.propTypes = {\r\n  bestHand: PropTypes.string\r\n};\r\n\r\nexport default Results;\r\n","import React, { Component } from \"react\";\n\nimport \"./App.css\";\nimport Controls from \"./Controls/Controls.js\";\nimport Board from \"./Board/Board.js\";\nimport Hand from \"./Hand/Hand.js\";\nimport Results from \"./Results/Results.js\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.shuffleDeckHandler = this.shuffleDeckHandler.bind(this);\n    this.drawHandHandler = this.drawHandHandler.bind(this);\n    this.drawBoardHandler = this.drawBoardHandler.bind(this);\n    this.state = {\n      deck: [],\n      hand: [\n        {\n          name: \"blank\",\n          value: \"blank\",\n          suit: \"blank\",\n          numericalValue: \"blank\"\n        },\n        {\n          name: \"blank\",\n          value: \"blank\",\n          suit: \"blank\",\n          numericalValue: \"blank\"\n        }\n      ],\n      board: [\n        {\n          name: \"blank\",\n          value: \"blank\",\n          suit: \"blank\",\n          numericalValue: \"blank\"\n        },\n        {\n          name: \"blank\",\n          value: \"blank\",\n          suit: \"blank\",\n          numericalValue: \"blank\"\n        },\n        {\n          name: \"blank\",\n          value: \"blank\",\n          suit: \"blank\",\n          numericalValue: \"blank\"\n        },\n        {\n          name: \"blank\",\n          value: \"blank\",\n          suit: \"blank\",\n          numericalValue: \"blank\"\n        },\n        {\n          name: \"blank\",\n          value: \"blank\",\n          suit: \"blank\",\n          numericalValue: \"blank\"\n        }\n      ],\n      bestHand: \"\"\n    };\n  }\n  componentDidMount() {\n    this.shuffleDeckHandler();\n  }\n\n  shuffleDeckHandler = () => {\n    function Card(name, value, suit, numericalValue) {\n      this.name = name;\n      this.value = value;\n      this.suit = suit;\n      this.numericalValue = numericalValue;\n    }\n    let deck = [];\n    let suits = [\"Clubs\", \"Diamonds\", \"Hearts\", \"Spades\"];\n    let values = [\n      \"Two\",\n      \"Three\",\n      \"Four\",\n      \"Five\",\n      \"Six\",\n      \"Seven\",\n      \"Eight\",\n      \"Nine\",\n      \"Ten\",\n      \"Jack\",\n      \"Queen\",\n      \"King\",\n      \"Ace\"\n    ];\n    let numericalValues = [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n    //populate deck\n    for (let i = 0; i < suits.length; i++) {\n      for (let j = 0; j < values.length; j++) {\n        let cardName = values[j] + \" of \" + suits[i];\n        let cardInstance = new Card(\n          cardName,\n          values[j],\n          suits[i],\n          numericalValues[j]\n        );\n        deck.push(cardInstance);\n      }\n    }\n    //reset hand and board\n    let resetHand = [\n      { name: \"blank\", value: \"blank\", suit: \"blank\", numericalValue: \"blank\" },\n      { name: \"blank\", value: \"blank\", suit: \"blank\", numericalValue: \"blank\" }\n    ];\n    let resetBoard = [\n      { name: \"blank\", value: \"blank\", suit: \"blank\", numericalValue: \"blank\" },\n      { name: \"blank\", value: \"blank\", suit: \"blank\", numericalValue: \"blank\" },\n      { name: \"blank\", value: \"blank\", suit: \"blank\", numericalValue: \"blank\" },\n      { name: \"blank\", value: \"blank\", suit: \"blank\", numericalValue: \"blank\" },\n      { name: \"blank\", value: \"blank\", suit: \"blank\", numericalValue: \"blank\" }\n    ];\n    this.setState({\n      deck: deck,\n      hand: resetHand,\n      board: resetBoard,\n      bestHand: \"\"\n    });\n  };\n  drawHandHandler = () => {\n    let deckCopy = Object.assign([], this.state.deck);\n\n    let hand = [];\n    if (deckCopy.length === 52) {\n      let card1Index = Math.floor(Math.random() * deckCopy.length);\n      let card1 = deckCopy[card1Index];\n      deckCopy.splice(card1Index, 1);\n      let card2Index = Math.floor(Math.random() * deckCopy.length);\n      let card2 = deckCopy[card2Index];\n      deckCopy.splice(card2Index, 1);\n      hand = [card1, card2];\n    }\n    let bestHand = this.determineBestHand(hand, []);\n\n    this.setState({ hand, deck: deckCopy, bestHand: bestHand });\n  };\n  drawBoardHandler = () => {\n    let currentBoard = this.state.board;\n    let deckCopy = Object.assign([], this.state.deck);\n    let boardCopy = Object.assign([], this.state.board);\n    if (currentBoard[0].name === \"blank\") {\n      let board1Index = Math.floor(Math.random() * deckCopy.length);\n      let board1 = deckCopy[board1Index];\n      deckCopy.splice(board1Index, 1);\n      let board2Index = Math.floor(Math.random() * deckCopy.length);\n      let board2 = deckCopy[board2Index];\n      deckCopy.splice(board2Index, 1);\n      let board3Index = Math.floor(Math.random() * deckCopy.length);\n      let board3 = deckCopy[board3Index];\n      deckCopy.splice(board3Index, 1);\n      boardCopy.splice(0, 3);\n      boardCopy.unshift(board3);\n      boardCopy.unshift(board2);\n      boardCopy.unshift(board1);\n\n      let bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n      this.setState({ board: boardCopy, deck: deckCopy, bestHand: bestHand });\n    } else if (currentBoard[3].name === \"blank\") {\n      let board4Index = Math.floor(Math.random() * deckCopy.length);\n      let board4 = deckCopy[board4Index];\n      deckCopy.splice(board4Index, 1);\n      boardCopy.splice(3, 1, board4);\n\n      let bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n      this.setState({ board: boardCopy, deck: deckCopy, bestHand: bestHand });\n    } else if (currentBoard[4].name === \"blank\") {\n      let board5Index = Math.floor(Math.random() * deckCopy.length);\n      let board5 = deckCopy[board5Index];\n      deckCopy.splice(board5Index, 1);\n      boardCopy.splice(4, 1, board5);\n\n      let bestHand = this.determineBestHand(this.state.hand, boardCopy);\n\n      this.setState({ board: boardCopy, deck: deckCopy, bestHand: bestHand });\n    }\n  };\n  determineBestHand = (hand, board) => {\n    //combine board and hand\n    let allCards = hand.concat(board);\n    //create values array\n    let cardValues = [];\n    allCards.forEach(card => {\n      cardValues.push(card.numericalValue);\n    });\n    //create suits array\n    let cardSuits = [];\n    allCards.forEach(card => {\n      cardSuits.push(card.suit);\n    });\n    //enumerate possible straights\n    let possibleStraights = [];\n    for (let i = 10; i > 1; i--) {\n      let straight = [i, i + 1, i + 2, i + 3, i + 4];\n      possibleStraights.push(straight);\n    }\n    possibleStraights.push([14, 2, 3, 4, 5]);\n\n    //enumerate card cardValues and suits\n    let allValues = [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2];\n    let allSuits = [\"Spades\", \"Hearts\", \"Diamonds\", \"Clubs\"];\n\n    //check hand for royal flush\n    let broadway = [10, 11, 12, 13, 14];\n    for (let i = 0; i < allSuits.length; i++) {\n      let suitCount = cardSuits.filter(suit => suit === allSuits[i]);\n      if (suitCount.length > 4) {\n        let flushCards = allCards.filter(card => card.suit === allSuits[i]);\n        let flushValues = [];\n        flushCards.forEach(card => {\n          flushValues.push(card.numericalValue);\n        });\n        let straightMade = broadway.every(\n          card => flushValues.indexOf(card) > -1\n        );\n        if (straightMade === true) {\n          return `${allSuits[i]} Royal Flush`;\n        }\n      }\n    }\n    //check hand for straight flush\n    for (let i = 0; i < allSuits.length; i++) {\n      let suitCount = cardSuits.filter(suit => suit === allSuits[i]);\n      if (suitCount.length > 4) {\n        let flushCards = allCards.filter(card => card.suit === allSuits[i]);\n        let flushValues = [];\n        flushCards.forEach(card => {\n          flushValues.push(card.numericalValue);\n        });\n        for (let j = 0; j < possibleStraights.length; j++) {\n          let straightMade = possibleStraights[j].every(\n            card => flushValues.indexOf(card) > -1\n          );\n          if (straightMade === true) {\n            let straight = possibleStraights[j];\n            let maxValue = Math.max(...straight);\n            let cardName = this.convertValueToName(maxValue);\n            return `${cardName}-high ${allSuits[i]} Straight Flush`;\n          }\n        }\n      }\n    }\n    //check hand for four of a kind\n    for (let i = 0; i < allValues.length; i++) {\n      let cardCount = cardValues.filter(card => card === allValues[i]);\n      if (cardCount.length === 4) {\n        let cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Four of a kind ${cardName}s`;\n      }\n    }\n    //check hand for full house\n    for (let i = 0; i < allValues.length; i++) {\n      let firstCount = cardValues.filter(card => card === allValues[i]);\n      if (firstCount.length === 3) {\n        let higherPair = this.convertValueToPluralName(firstCount[0]);\n        let remainingValues = cardValues.filter(card => card !== allValues[i]);\n        for (let j = 0; j < allValues.length; j++) {\n          let secondCount = remainingValues.filter(\n            card => card === allValues[j]\n          );\n          if (secondCount.length === 2) {\n            let lowerPair = this.convertValueToPluralName(secondCount[0]);\n            return `Full House, ${higherPair}s over ${lowerPair}s`;\n          }\n        }\n      }\n    }\n    //check hand for flush\n    for (let i = 0; i < allSuits.length; i++) {\n      let suitCount = cardSuits.filter(suit => suit === allSuits[i]);\n      if (suitCount.length > 4) {\n        let flushCards = allCards.filter(card => card.suit === allSuits[i]);\n        let flushValues = [];\n        flushCards.forEach(card => {\n          flushValues.push(card.numericalValue);\n        });\n        let flushMax = Math.max(...flushValues);\n        let cardName = this.convertValueToName(flushMax);\n        return `${cardName}-high ${allSuits[i]} Flush`;\n      }\n    }\n    //check hand for straight\n    for (let i = 0; i < possibleStraights.length; i++) {\n      let straightMade = possibleStraights[i].every(\n        card => cardValues.indexOf(card) > -1\n      );\n      if (straightMade === true) {\n        let straight = possibleStraights[i];\n        let maxValue = Math.max(...straight);\n        let cardName = this.convertValueToName(maxValue);\n        return `${cardName}-high Straight`;\n      }\n    }\n    //check hand for three of a kind\n    for (let i = 0; i < allValues.length; i++) {\n      let cardCount = cardValues.filter(card => card === allValues[i]);\n      if (cardCount.length === 3) {\n        let cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Three of a kind, ${cardName}s`;\n      }\n    }\n    //check hand for two pair\n    for (let i = 0; i < allValues.length; i++) {\n      let firstCount = cardValues.filter(card => card === allValues[i]);\n      if (firstCount.length === 2) {\n        let higherPair = this.convertValueToPluralName(firstCount[0]);\n        let remainingValues = cardValues.filter(card => card !== allValues[i]);\n        for (let j = 0; j < allValues.length; j++) {\n          let secondCount = remainingValues.filter(\n            card => card === allValues[j]\n          );\n          if (secondCount.length === 2) {\n            let lowerPair = this.convertValueToPluralName(secondCount[0]);\n            return `Two Pair, ${higherPair}s over ${lowerPair}s`;\n          }\n        }\n      }\n    }\n    //check hand for pair\n    for (let i = 0; i < allValues.length; i++) {\n      let cardCount = cardValues.filter(card => card === allValues[i]);\n      if (cardCount.length === 2) {\n        let cardName = this.convertValueToPluralName(cardCount[0]);\n        return `Pair of ${cardName}s`;\n      }\n    }\n    //check hand for high card\n    for (let i = 0; i < allValues.length; i++) {\n      if (cardValues.indexOf(allValues[i]) >= 0) {\n        let cardName = this.convertValueToName(allValues[i]);\n        return `High Card ${cardName}`;\n      }\n    }\n  };\n\n  convertValueToName = value => {\n    if (value === 2) {\n      return \"Two\";\n    } else if (value === 3) {\n      return \"Three\";\n    } else if (value === 4) {\n      return \"Four\";\n    } else if (value === 5) {\n      return \"Five\";\n    } else if (value === 6) {\n      return \"Six\";\n    } else if (value === 7) {\n      return \"Seven\";\n    } else if (value === 8) {\n      return \"Eight\";\n    } else if (value === 9) {\n      return \"Nine\";\n    } else if (value === 10) {\n      return \"Ten\";\n    } else if (value === 11) {\n      return \"Jack\";\n    } else if (value === 12) {\n      return \"Queen\";\n    } else if (value === 13) {\n      return \"King\";\n    } else if (value === 14) {\n      return \"Ace\";\n    }\n  };\n\n  convertValueToPluralName = value => {\n    if (value === 2) {\n      return \"Two\";\n    } else if (value === 3) {\n      return \"Three\";\n    } else if (value === 4) {\n      return \"Four\";\n    } else if (value === 5) {\n      return \"Five\";\n    } else if (value === 6) {\n      return \"Sixe\";\n    } else if (value === 7) {\n      return \"Seven\";\n    } else if (value === 8) {\n      return \"Eight\";\n    } else if (value === 9) {\n      return \"Nine\";\n    } else if (value === 10) {\n      return \"Ten\";\n    } else if (value === 11) {\n      return \"Jack\";\n    } else if (value === 12) {\n      return \"Queen\";\n    } else if (value === 13) {\n      return \"King\";\n    } else if (value === 14) {\n      return \"Ace\";\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"App\">\n        <br />\n        <h1>Poker Hand Simulator</h1>\n        <div className=\"card-display\">\n          <Board\n            board1={this.state.board[0].name}\n            board2={this.state.board[1].name}\n            board3={this.state.board[2].name}\n            board4={this.state.board[3].name}\n            board5={this.state.board[4].name}\n          />\n          <Hand\n            hand1={this.state.hand[0].name}\n            hand2={this.state.hand[1].name}\n          />\n        </div>\n        <div className=\"controls-display\">\n          <Results bestHand={this.state.bestHand} />\n          <Controls\n            shuffle={this.shuffleDeckHandler}\n            dealHand={this.drawHandHandler}\n            dealBoard={this.drawBoardHandler}\n            handStatus={this.state.hand[0].name}\n            flopStatus={this.state.board[0].name}\n            turnStatus={this.state.board[3].name}\n            riverStatus={this.state.board[4].name}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}